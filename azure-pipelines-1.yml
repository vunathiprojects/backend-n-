# azure-pipelines-backend.yml
trigger:
  branches:
    include:
      - main

variables:
  azureSubscription: 'novya-serviceconnection'
  appName: 'backend-n'
  pythonVersion: '3.11'
  backendDir: 'ai_backend'  # Correct path to your backend

pool:
  vmImage: 'ubuntu-latest'

steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(pythonVersion)'
    displayName: 'Use Python $(pythonVersion)'

  # FIXED: Install dependencies from ai_backend/requirements.txt
  - script: |
      echo "Installing dependencies from $(backendDir)/requirements.txt..."
      pip install -r $(backendDir)/requirements.txt
    displayName: 'Install Python dependencies'

  # FIXED: Test application from correct directory
  - script: |
      echo "Testing application startup from $(backendDir) directory..."
      cd $(backendDir)
      echo "Current directory: $(pwd)"
      echo "Files in directory:"
      ls -la
      echo "Testing: gunicorn -w 2 -k uvicorn.workers.UvicornWorker app:app"
      timeout 30s gunicorn -w 2 -k uvicorn.workers.UvicornWorker app:app --bind=0.0.0.0:8000 || echo "Test completed - expected to timeout"
    displayName: 'Test FastAPI Application Startup'
    continueOnError: true

  # FIXED: Verify the exact file structure
  - script: |
      echo "=== Project Structure ==="
      find . -name "*.py" -o -name "requirements.txt" | sort
      echo "=== ai_backend folder contents ==="
      ls -la ai_backend/
      echo "=== Requirements.txt content ==="
      cat ai_backend/requirements.txt
      echo "=== app.py exists? ==="
      test -f ai_backend/app.py && echo "✅ ai_backend/app.py exists" || echo "❌ ai_backend/app.py missing"
    displayName: 'Verify Project Structure'

  - task: ArchiveFiles@2
    displayName: 'Archive backend files'
    inputs:
      rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
      includeRootFolder: false
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/backend.zip'
      replaceExistingArchive: true

  - task: AzureWebApp@1
    displayName: 'Deploy backend to Azure App Service'
    inputs:
      azureSubscription: $(azureSubscription)
      appName: $(appName)
      package: '$(Build.ArtifactStagingDirectory)/backend.zip'

  # FIXED: Set the correct startup command for Azure App Service
  - task: AzureCLI@2
    displayName: 'Update App Service Startup Command'
    inputs:
      azureSubscription: $(azureSubscription)
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        az webapp config set --name $(appName) --resource-group $(resourceGroup) --startup-file "gunicorn -w 4 -k uvicorn.workers.UvicornWorker ai_backend.app:app --chdir ai_backend"

  # Health check with better error handling
  - script: |
      echo "Waiting for application to start (90 seconds)..."
      sleep 90
      echo "Starting health checks..."
      for i in 1 2 3 4 5; do
        echo "Health check attempt $i/5..."
        response_code=$(curl -s -o /dev/null -w "%{http_code}" --max-time 30 https://$(appName).azurewebsites.net/)
        if [ "$response_code" = "200" ]; then
          echo "✅ Application is responding with HTTP 200"
          exit 0
        else
          echo "⚠️ Attempt $i: HTTP $response_code, waiting 20 seconds..."
          sleep 20
        fi
      done
      echo "❌ Health check failed after 5 attempts"
      echo "Please check Azure App Service logs for details"
    displayName: 'Health Check Application'
    continueOnError: true